/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import java.util.Arrays;

public class Library {
    public static void main(String[] args) {
        int[] input = new int[]{1, 7, 2, 9, 7, 3};
        System.out.println(containsDuplicates(input));
        int[] dice = roll(6);
        System.out.println(Arrays.toString(dice));
        System.out.println(calculateAverage(input));

        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };

        System.out.println(lowestAverage(weeklyMonthTemperatures));
    }

    public static int[] roll(int rollNumber) {
        int[] dice = new int[rollNumber];
        for (int i = 0; i < dice.length; i++) {
            dice[i] = (int) ((Math.random() * 6) + 1);
        }
        return dice;
    }

    public static boolean containsDuplicates(int[] input) {
        for (int i = 0; i < input.length; i++) {
            for (int j = 0; j < input.length; j++) {
                if (j != i && input[i] == input[j]) {
                    return true;
                }
            }
        }
        return false;
    }

    public static float calculateAverage(int[] input) {
        float sum = 0;
        for (int i = 0; i < input.length; i++) {
            sum += input[i];
        }
        if (input.length != 0) {
            return sum / input.length;
        } else {
            return 0;
        }
    }

    public static float lowestAverage(int[][] input) {
        float lowestAverage = 0;
        for(int i = 0; i < input.length; i++) {
            float currentAverage = 0;
            for(int j = 0; j<input[i].length; j++) {
                currentAverage += input[i][j];
            }
            if (i == 0 && input[i].length != 0) {
                lowestAverage = currentAverage/input[i].length;
            } else if (input[i].length != 0) {
                if (currentAverage/input[i].length < lowestAverage) {
                    lowestAverage = currentAverage/input[i].length;
                }
            }
        }

        if (input.length != 0) {
            return lowestAverage;
        } else {
            return 0;
        }
    }
}
